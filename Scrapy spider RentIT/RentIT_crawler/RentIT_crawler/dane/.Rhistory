print ("Hello Wordl")
print ("Hello World")
x <- "Dupa"
print(x)
x <- 3
print(x)
x <- "Hello world"
print(x)
y = "Hello world"
print(y)
print(y)
x
n <- 1.23
print(n)
d <- as.Date("2012-11-12")
print(d)
update.packages(ask = FALSE, repos = 'http://cran.rstudio.com')
shiny::runApp('C:/Users/rafal/Desktop/rentit-market-screen')
install.packages("plotly")
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
install.packages("colourpicker")
install.packages("colourpicker")
vScreenMarket <- tabItem(
tabName = "market",
tabsetPanel(
tabPanel(title = "Price to surface area relation",
br(),
sidebarPanel(textInput(inputId="titlePriceArea", label="Title",value="Price vs surface"),
numericInput(inputId="sizePriceArea", label="Point size",value=1,max=5),
checkboxInput("fitPriceArea", "Add line of best fit", FALSE),
colourInput("colourPriceArea", "Point colour", value = "blue"),
uiOutput("priceAreaBox")),
mainPanel(plotlyOutput("priceAreaScatter"))
),
tabPanel(title = "Price to construction year relation",
br(),
sidebarPanel(textInput(inputId="titlePriceYear", label="Title",value="Price vs year"),
numericInput(inputId="sizePriceYear", label="Point size",value=1,max=5),
checkboxInput("fitPriceYear", "Add line of best fit", FALSE),
radioButtons("colourPriceYear","Point colour", choices=c("blue","red","green","black")),
uiOutput("priceYearBox")),
mainPanel(plotlyOutput("priceYearScatter"))
),
tabPanel(title = "Histogram of flat prices", plotlyOutput("priceHistogram")),
tabPanel(title = "Histogram of flat year of construction", plotlyOutput("yearHistogram")),
tabPanel(title = "Histogram of flat surface area", plotlyOutput("areaHistogram"),
uiOutput("areaHistogramBox"))
)
)
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
print(featureList)
featureList <- lapply(jsn, '[[', "cechy") %>% lapply(., names) %>%
unlist(.) %>% unique(.)
jsn <- fromJSON(file = "Scrapy flats all.json")
library(rjson)
library(data.table)
library(readr)
library(magrittr)
library(stringr)
library(rjson)
library(data.table)
library(readr)
library(magrittr)
library(stringr)
jsn <- fromJSON(file = "Scrapy flats all.json")
setwd("C:/Users/rafal/Desktop/GitHub/Scrapy- RentIT/Scrapy spider RentIT/RentIT_crawler/RentIT_crawler/dane")
jsn <- fromJSON(file = "Scrapy flats all.json")
jsn <- fromJSON(file = "Scrapy_flats_all.json")
jsn <- fromJSON(file = "Scrapy_flats_all.json")
mainList <- lapply(jsn, names) %>% unlist(.) %>% unique(.) %>%
tolower(.) %>% trimws(.)
print(mainList)
featureList <- lapply(jsn, '[[', "cechy") %>% lapply(., names) %>%
unlist(.) %>% unique(.)
print(featureList)
featureListCleared <- featureList %>% gsub(":", "", .) %>% gsub(" ", "_", .) %>%
tolower(.) %>% trimws(.)
print(featureListCleared)
photoNum <- lapply(jsn, '[[', "zdjecia") %>% sapply(., length) %>% max(.)
print(photoNum)
emp <- list()
for(jtr in mainList){
if(jtr == "cechy"){
for(ntr in featureListCleared){
emp[[ntr]] <- NA
}
} else if(jtr == "zdjecia"){
for(ntr in seq(1, photoNum)){
emp[[paste0("zdjecia_", ntr)]] <- NA
}
} else{
emp[[jtr]] <- NA
}
}
View(emp)
table <- as.data.table(emp)
print(table)
for(itr in seq_along(jsn)){
emp <- list()
for(jtr in mainList){
if(jtr == "cechy"){
for(ntr in seq_along(featureList)){
emp[[featureListCleared[ntr]]] <- jsn[[itr]][[jtr]][[featureList[ntr]]]
}
} else if(jtr == "zdjecia"){
for(ntr in seq_len(photoNum)){
if(ntr <= length(jsn[[itr]][[jtr]])){
emp[[paste0("zdjecia_", ntr)]] <- jsn[[itr]][[jtr]][[ntr]]
} else{
emp[[paste0("zdjecia_", ntr)]] <- NA
}
}
} else{
emp[[jtr]] <- jsn[[itr]][[jtr]]
}
}
table <- rbind(table, as.data.table(emp), fill = TRUE)
}
# Usuń polskie znaki z nazw kolumn
names(table) <- table %>% names(.) %>% iconv(.,from = "UTF-8", to="ASCII//TRANSLIT")
print(table)
table <- table[-1,]
table$cena <- gsub(',', '.',gsub("\\s", "", gsub("[zł]","",table$cena)))
table$czynsz<- gsub(',', '.',gsub("\\s", "", gsub("[zł]","",table$czynsz)))
table$powierzchnia <- gsub(',', '.',gsub("\\s", "", table$powierzchnia %>%
sapply(., function(x){
substr(x, 1, nchar(x) - 2)
},
USE.NAMES = FALSE
)))
table$powierzchnia <- as.numeric(table$powierzchnia)
table$cena[grepl("EUR", table$cena)==TRUE] <- as.double(gsub("EUR","", table$cena))*read_csv("https://stooq.pl/q/l/?s=eurpln&f=sd2t2ohlc&h&e=csv")$Otwarcie
table$cena_za_metr <- substr(gsub(',', '.',gsub("\\s", "", gsub("[zł/m]","",table$cena_za_metr))),1,nchar(gsub(',', '.',gsub("\\s", "", gsub("[zł/m]","",table$cena_za_metr))))-1)
table$liczba_wyswietlen <- unlist(str_extract_all(table$liczba_wyswietlen,"\\(?[0-9,.]+\\)?"))
table$rok_budowy <- unlist(str_extract_all(table$rok_budowy,"\\(?[0-9,.]+\\)?"))
table[is.na(table)] <- ""
write_csv(table, "flats_all_f.csv")
table[, forma_wlasnosci] %>% unique(.)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
table[forma_wlasnosci="pełna własność"]
table[forma_wlasnosci=="pełna własność"]
table$forma_wlasnosci <- gsub('" "',"",table$forma_wlasnosci)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
table[, forma_wlasnosci] %>% unique(.)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
table$forma_wlasnosci <- gsub('"',"",table$forma_wlasnosci)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
write_csv(table, "flats_all_f.csv", encoding="UTF-8")
con<-file("flats_all_f.csv",encoding="UTF-8")
write_csv(table,file=con)
write_csv(table, "flats_all_f.csv",fileEncoding="UTF-8")
write_csv(table, "flats_all_f.csv",fileEncoding='UTF-8')
con<-file('flats_all_f.csv',encoding="utf8")
write.csv(table,file=con)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
table$forma_wlasnosci <- gsub('spółdzielcze własnościowe" "','spółdzielcze własnościowe',table$forma_wlasnosci)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
table$forma_wlasnosci <- gsub('spółdzielcze własnościowe" "','x',table$forma_wlasnosci)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
write_csv(table, "flats_all_f.csv",fileEncoding='UTF-8')
write_excel_csv(table, "flats_all_f.csv")
table[, forma_wlasnosci] %>% trimws(.) %>% unique(.)
shiny::runApp('C:/Users/rafal/Desktop/rentit-map-screen/rentit')
